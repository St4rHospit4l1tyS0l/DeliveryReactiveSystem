//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Drs.Service.SyncServerSvc {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SyncServerSvc.ISyncServerSvc")]
    public interface ISyncServerSvc {
        
        // CODEGEN: Generating message contract since the wrapper name (RequestMessageServerFileSync) of message RequestMessageServerFileSync does not match the default value (GetFileByName)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncServerSvc/GetFileByName", ReplyAction="http://tempuri.org/ISyncServerSvc/GetFileByNameResponse")]
        Drs.Service.SyncServerSvc.ResponseMessageServerFileSync GetFileByName(Drs.Service.SyncServerSvc.RequestMessageServerFileSync request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncServerSvc/GetFileByName", ReplyAction="http://tempuri.org/ISyncServerSvc/GetFileByNameResponse")]
        System.Threading.Tasks.Task<Drs.Service.SyncServerSvc.ResponseMessageServerFileSync> GetFileByNameAsync(Drs.Service.SyncServerSvc.RequestMessageServerFileSync request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncServerSvc/SetFranchiseVersionTerminalOk", ReplyAction="http://tempuri.org/ISyncServerSvc/SetFranchiseVersionTerminalOkResponse")]
        void SetFranchiseVersionTerminalOk(int franchiseId, string sVersion, string sMaInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncServerSvc/SetFranchiseVersionTerminalOk", ReplyAction="http://tempuri.org/ISyncServerSvc/SetFranchiseVersionTerminalOkResponse")]
        System.Threading.Tasks.Task SetFranchiseVersionTerminalOkAsync(int franchiseId, string sVersion, string sMaInfo);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RequestMessageServerFileSync", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RequestMessageServerFileSync {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string FileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int FileType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.Guid UidVersion;
        
        public RequestMessageServerFileSync() {
        }
        
        public RequestMessageServerFileSync(string FileName, int FileType, System.Guid UidVersion) {
            this.FileName = FileName;
            this.FileType = FileType;
            this.UidVersion = UidVersion;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResponseMessageServerFileSync", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ResponseMessageServerFileSync {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public bool HasError;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream File;
        
        public ResponseMessageServerFileSync() {
        }
        
        public ResponseMessageServerFileSync(bool HasError, string Message, System.IO.Stream File) {
            this.HasError = HasError;
            this.Message = Message;
            this.File = File;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISyncServerSvcChannel : Drs.Service.SyncServerSvc.ISyncServerSvc, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SyncServerSvcClient : System.ServiceModel.ClientBase<Drs.Service.SyncServerSvc.ISyncServerSvc>, Drs.Service.SyncServerSvc.ISyncServerSvc {
        
        public SyncServerSvcClient() {
        }
        
        public SyncServerSvcClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SyncServerSvcClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SyncServerSvcClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SyncServerSvcClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Drs.Service.SyncServerSvc.ResponseMessageServerFileSync Drs.Service.SyncServerSvc.ISyncServerSvc.GetFileByName(Drs.Service.SyncServerSvc.RequestMessageServerFileSync request) {
            return base.Channel.GetFileByName(request);
        }
        
        public bool GetFileByName(string FileName, int FileType, System.Guid UidVersion, out string Message, out System.IO.Stream File) {
            Drs.Service.SyncServerSvc.RequestMessageServerFileSync inValue = new Drs.Service.SyncServerSvc.RequestMessageServerFileSync();
            inValue.FileName = FileName;
            inValue.FileType = FileType;
            inValue.UidVersion = UidVersion;
            Drs.Service.SyncServerSvc.ResponseMessageServerFileSync retVal = ((Drs.Service.SyncServerSvc.ISyncServerSvc)(this)).GetFileByName(inValue);
            Message = retVal.Message;
            File = retVal.File;
            return retVal.HasError;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Drs.Service.SyncServerSvc.ResponseMessageServerFileSync> Drs.Service.SyncServerSvc.ISyncServerSvc.GetFileByNameAsync(Drs.Service.SyncServerSvc.RequestMessageServerFileSync request) {
            return base.Channel.GetFileByNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<Drs.Service.SyncServerSvc.ResponseMessageServerFileSync> GetFileByNameAsync(string FileName, int FileType, System.Guid UidVersion) {
            Drs.Service.SyncServerSvc.RequestMessageServerFileSync inValue = new Drs.Service.SyncServerSvc.RequestMessageServerFileSync();
            inValue.FileName = FileName;
            inValue.FileType = FileType;
            inValue.UidVersion = UidVersion;
            return ((Drs.Service.SyncServerSvc.ISyncServerSvc)(this)).GetFileByNameAsync(inValue);
        }
        
        public void SetFranchiseVersionTerminalOk(int franchiseId, string sVersion, string sMaInfo) {
            base.Channel.SetFranchiseVersionTerminalOk(franchiseId, sVersion, sMaInfo);
        }
        
        public System.Threading.Tasks.Task SetFranchiseVersionTerminalOkAsync(int franchiseId, string sVersion, string sMaInfo) {
            return base.Channel.SetFranchiseVersionTerminalOkAsync(franchiseId, sVersion, sMaInfo);
        }
    }
}
